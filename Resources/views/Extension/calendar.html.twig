{% block sg_calendar_content %}

    <div id="full_calendar"></div>

    <script type="text/javascript">
        $(document).ready(function () {

            $('#full_calendar').fullCalendar({
                header: {
                    left: 'prevYear, prev, next, nextYear today',
                    center: 'title',
                    right: 'month, basicWeek, basicDay, agendaWeek, agendaDay'
                },
                editable: false,
                ignoreTimezone: false,
                defaultView: 'month',
                firstDay: {{ first_day }},
                allDayText: "{{ 'sg.calendar.allDay'|trans({}, 'CalendarBundle') }}",
                dayNames: [
                    "{{ 'sg.calendar.day.sunday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.monday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.tuesday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.wednesday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.thursday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.friday'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.saturday'|trans({}, 'CalendarBundle') }}"
                ],
                dayNamesShort: [
                    "{{ 'sg.calendar.day.short.sun'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.mon'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.tue'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.wed'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.thu'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.fri'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.day.short.sat'|trans({}, 'CalendarBundle') }}"
                ],
                monthNames: [
                    "{{ 'sg.calendar.month.january'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.february'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.march'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.april'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.may'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.june'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.july'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.august'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.september'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.october'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.november'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.december'|trans({}, 'CalendarBundle') }}"
                ],
                monthNamesShort: [
                    "{{ 'sg.calendar.month.short.jan'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.feb'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.mar'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.apr'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.may'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.june'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.july'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.aug'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.sept'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.oct'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.nov'|trans({}, 'CalendarBundle') }}",
                    "{{ 'sg.calendar.month.short.dec'|trans({}, 'CalendarBundle') }}"
                ],
                timeFormat:{
                    '': "{{ time_format }}",
                    agenda: "{{ time_format }}{ - {{ time_format }}}"
                },
                axisFormat: "{{ time_format }}",

                // @todo: config
                titleFormat: {
                    week: "d.[ MMMM][ yyyy]{ - d. MMMM yyyy}",
                    day: "dddd, d. MMMM yyyy"
                },
                columnFormat: {
                    week: "ddd d.",
                    day: ""
                },

                buttonText: {
                    today: "{{ 'sg.calendar.button.today'|trans({}, 'CalendarBundle') }}",
                    month: "{{ 'sg.calendar.button.month'|trans({}, 'CalendarBundle') }}",
                    week: "{{ 'sg.calendar.button.week'|trans({}, 'CalendarBundle') }}",
                    day: "{{ 'sg.calendar.button.day'|trans({}, 'CalendarBundle') }}"
                },
                eventSources: [{
                    url: "{{ event_source_url }}"
                }],

                /*
                eventRender: function(event, element) {
                    element.find('.fc-event-title').html("<a href=" + event.show_url + ">" + event.title +"</a>" + "<a href=" + event.delete_url + "> <i style='margin-top: 2px;' class=' pull-right cus-delete'></i></a>");
                },*/

                eventMouseover: function(event, jsEvent, view) {
                    if (view.name !== 'agendaDay') {
                        $(jsEvent.target).attr('title', event.title);
                    }
                },

                eventResize: function(event, dayDelta, minuteDelta, revertFunc) {
                    if (!confirm("Soll der neue Termin gespeichert werden?")) {
                        revertFunc();
                    } else {
                        $.ajax({
                            url: "{{ event_update_xhr_url }}",
                            type: "POST",
                            cache: false,
                            data: {
                                'id':       event.id,
                                'start':    event.start,
                                'end':      event.end
                            },
                            success: function(data) {
                                alert("Der Termin wurde erfolgreich gespeichert.");
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log(XMLHttpRequest + ' ' + textStatus + ' ' +errorThrown);
                                revertFunc();
                            }
                        })
                    }
                },

                eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc) {
                    if (!confirm("Soll der neue Termin gespeichert werden?")) {
                        revertFunc();
                    } else {
                        $.ajax({
                            url: "{{ event_update_xhr_url }}",
                            type: "POST",
                            cache: false,
                            data: {
                                'id':       event.id,
                                'start':    event.start,
                                'end':      event.end
                            },
                            success: function(data) {
                                alert("Der Termin wurde erfolgreich gespeichert.");
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log(XMLHttpRequest + ' ' + textStatus + ' ' +errorThrown);
                                revertFunc();
                            }
                        })
                    }
                }
            })

        });
    </script>

{% endblock %}